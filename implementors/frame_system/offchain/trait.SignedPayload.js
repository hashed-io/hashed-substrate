(function() {var implementors = {};
implementors["pallet_bitcoin_vaults"] = [{"text":"impl&lt;S:&nbsp;SigningTypes&gt; SignedPayload&lt;S&gt; for <a class=\"struct\" href=\"pallet_bitcoin_vaults/types/struct.VaultsPayload.html\" title=\"struct pallet_bitcoin_vaults::types::VaultsPayload\">VaultsPayload</a>&lt;S::Public&gt;","synthetic":false,"types":["pallet_bitcoin_vaults::types::VaultsPayload"]},{"text":"impl&lt;S:&nbsp;SigningTypes&gt; SignedPayload&lt;S&gt; for <a class=\"struct\" href=\"pallet_bitcoin_vaults/types/struct.ProposalsPayload.html\" title=\"struct pallet_bitcoin_vaults::types::ProposalsPayload\">ProposalsPayload</a>&lt;S::Public&gt;","synthetic":false,"types":["pallet_bitcoin_vaults::types::ProposalsPayload"]}];
implementors["pallet_nbv_storage"] = [{"text":"impl&lt;S:&nbsp;SigningTypes&gt; SignedPayload&lt;S&gt; for <a class=\"struct\" href=\"pallet_nbv_storage/types/struct.VaultsPayload.html\" title=\"struct pallet_nbv_storage::types::VaultsPayload\">VaultsPayload</a>&lt;S::Public&gt;","synthetic":false,"types":["pallet_nbv_storage::types::VaultsPayload"]},{"text":"impl&lt;S:&nbsp;SigningTypes&gt; SignedPayload&lt;S&gt; for <a class=\"struct\" href=\"pallet_nbv_storage/types/struct.ProposalsPayload.html\" title=\"struct pallet_nbv_storage::types::ProposalsPayload\">ProposalsPayload</a>&lt;S::Public&gt;","synthetic":false,"types":["pallet_nbv_storage::types::ProposalsPayload"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()