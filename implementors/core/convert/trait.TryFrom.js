(function() {var implementors = {
"hashed_parachain_runtime":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.69.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"enum\" href=\"hashed_parachain_runtime/enum.OriginCaller.html\" title=\"enum hashed_parachain_runtime::OriginCaller\">OriginCaller</a>&gt; for Origin"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.69.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"enum\" href=\"hashed_parachain_runtime/enum.OriginCaller.html\" title=\"enum hashed_parachain_runtime::OriginCaller\">OriginCaller</a>&gt; for Origin"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.69.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"enum\" href=\"hashed_parachain_runtime/enum.OriginCaller.html\" title=\"enum hashed_parachain_runtime::OriginCaller\">OriginCaller</a>&gt; for Origin&lt;<a class=\"struct\" href=\"hashed_parachain_runtime/struct.Runtime.html\" title=\"struct hashed_parachain_runtime::Runtime\">Runtime</a>&gt;"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.69.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"enum\" href=\"hashed_parachain_runtime/enum.OriginCaller.html\" title=\"enum hashed_parachain_runtime::OriginCaller\">OriginCaller</a>&gt; for Origin&lt;<a class=\"struct\" href=\"hashed_parachain_runtime/struct.Runtime.html\" title=\"struct hashed_parachain_runtime::Runtime\">Runtime</a>, Instance1&gt;"]],
"hashed_runtime":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.69.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"enum\" href=\"hashed_runtime/enum.OriginCaller.html\" title=\"enum hashed_runtime::OriginCaller\">OriginCaller</a>&gt; for Origin&lt;<a class=\"struct\" href=\"hashed_runtime/struct.Runtime.html\" title=\"struct hashed_runtime::Runtime\">Runtime</a>, Instance1&gt;"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.69.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"enum\" href=\"hashed_runtime/enum.OriginCaller.html\" title=\"enum hashed_runtime::OriginCaller\">OriginCaller</a>&gt; for Origin&lt;<a class=\"struct\" href=\"hashed_runtime/struct.Runtime.html\" title=\"struct hashed_runtime::Runtime\">Runtime</a>&gt;"]],
"pallet_bitcoin_vaults":[["impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.69.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.69.0/std/primitive.u8.html\">u8</a>]&gt; for <a class=\"struct\" href=\"pallet_bitcoin_vaults/types/crypto/struct.Signature.html\" title=\"struct pallet_bitcoin_vaults::types::crypto::Signature\">Signature</a>"],["impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.69.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.69.0/std/primitive.u8.html\">u8</a>]&gt; for <a class=\"struct\" href=\"pallet_bitcoin_vaults/types/crypto/struct.Public.html\" title=\"struct pallet_bitcoin_vaults::types::crypto::Public\">Public</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.69.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.69.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.69.0/std/primitive.u8.html\">u8</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.69.0/alloc/alloc/struct.Global.html\" title=\"struct alloc::alloc::Global\">Global</a>&gt;&gt; for <a class=\"struct\" href=\"pallet_bitcoin_vaults/types/crypto/struct.Signature.html\" title=\"struct pallet_bitcoin_vaults::types::crypto::Signature\">Signature</a>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()